// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "windows", "darwin"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String // Hashed password
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  characters Character[]
}

model Character {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  stats     Stats?
  gameState GameState?
}

model Stats {
  id              Int       @id @default(autoincrement())
  mentalPoints    Int       @default(3)
  energyLevel     Int       @default(3)
  motivationLevel Int       @default(3)
  focusLevel      Int       @default(3)
  characterId     Int       @unique
  character       Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
}

model GameState {
  id                  Int       @id @default(autoincrement())
  wins                Int       @default(0)
  losses              Int       @default(0)
  projectProgress     Int       @default(0)
  workDayCount        Int       @default(0)
  workDayLimit        Int       @default(5)
  workDayLimitReached Boolean   @default(false)
  actionsUsed         Int       @default(0)
  currentScene        String    @default("TestScene")
  characterId         Int       @unique
  character           Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  lastSaved           DateTime  @default(now())
}
